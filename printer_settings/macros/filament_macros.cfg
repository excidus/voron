[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set wipe_count = 3 %}
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z15 F300
  G1 E20 F100
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(312, 350),(275, 347)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z3.5 F9000
    {% endfor %}
  {% endfor %}
  _CLIENT_LINEAR_MOVE X=-10 F=7800
  _CLIENT_LINEAR_MOVE Y=-10 F=7800
  RESTORE_GCODE_STATE NAME=clean_nozzle_state

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  20
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

# Filament Runout
[gcode_macro _RUNOUT_INFO]
gcode:
  {% if 'filament_motion_sensor filament' in printer.configfile.settings %}
    {% set enable = printer['filament_motion_sensor filament'].enabled %}
    {% set detect = printer['filament_motion_sensor filament'].filament_detected %}
    {action_respond_info("RUNOUT Motion Sensor:
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% endif %}

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0

[gcode_macro RS_ENABLE]
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1

[gcode_macro RS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0


# Drying Filament
[gcode_macro _START_DRYER]
description: Start the heated bed filament dryer.
gcode:
    {% set BedTemperature = params.TEMPERATURE | default(50.0) | float %}
    {% set DryTime = params.TIME | default(14400) | int %}
    M140 S{BedTemperature}
    SET_FAN_SPEED FAN=fume_extractor_fan SPEED=0.5
    SET_GCODE_VARIABLE MACRO=_DRYER_STATUS VARIABLE=time_remaining VALUE={DryTime}
    SET_GCODE_VARIABLE MACRO=_DRYER_STATUS VARIABLE=bed_temperature VALUE={BedTemperature}
    UPDATE_DELAYED_GCODE ID=_DRYER_TIMER DURATION=1

[gcode_macro _STOP_DRYER]
gcode:
    M140 S0
    SET_FAN_SPEED FAN=fume_extractor_fan SPEED=0.0
    SET_GCODE_VARIABLE MACRO=_DRYER_STATUS VARIABLE=time_remaining VALUE=0
    UPDATE_DELAYED_GCODE ID=_DRYER_TIMER DURATION=0
    M117 Drying Stopped

[gcode_macro _DRYER_STATUS]
variable_time_remaining: 0
variable_bed_temperature: 0
gcode:
    {% if time_remaining > 0 %}
        M140 S{bed_temperature}
        SET_GCODE_VARIABLE MACRO=_DRYER_STATUS VARIABLE=time_remaining VALUE={time_remaining - 1}
        M117 Drying {time_remaining}
    {% else %}
        _STOP_DRYER
    {% endif %}

[delayed_gcode _DRYER_TIMER]
gcode:
    UPDATE_DELAYED_GCODE ID=_DRYER_TIMER DURATION=1
    _DRYER_STATUS

[gcode_macro DRY_PLA]
gcode:
    _START_DRYER TEMPERATURE=50 TIME=14400

[gcode_macro DRY_PETG]
gcode:
    _START_DRYER TEMPERATURE=55 TIME=18000

[gcode_macro DRY_ABS]
gcode:
    _START_DRYER TEMPERATURE=65 TIME=14400

# https://github.com/SphaeroX/Klipper-Pressure-advance-Macro
# [gcode_macro CALCULATE_PA]
# gcode:
#     {% set material = params.MATERIAL|default("PLA") %}
#     {% set bowden_length_cm = params.BOWDEN_LENGTH|default(0.4)|float %}
#     {% set bowden_length_dm = bowden_length_cm / 10 %}
#     {% set layer_height = params.LAYER_HEIGHT|default(0.2)|float %}
#     {% set nozzle_size = params.NOZZLE_SIZE|default(0.4)|float %}
#     {% set line_width = params.LINE_WIDTH|default(nozzle_size * 1.2)|float %}
#     {% set print_speed = params.PRINT_SPEED|default(60)|float %}
#     {% set filament_diameter = params.FILAMENT_DIAMETER|default(1.75)|float %}
#     {% set filament_area = 3.14159 * (filament_diameter / 2) ** 2 %}
#     {% set flow_rate = line_width * layer_height * print_speed %}
#     {% set material_constant = {
#         'PLA': 85,
#         'PETG': 100,
#         'ABS': 95,
#         'TPU': 140,
#         'NYLON': 120,
#         'ASA': 100,
#         'PVB': 85,
#         'PA': 120,
#         'FLEX': 140
#     }[material] %}
#     {% set pressure_advance = (flow_rate * bowden_length_dm) / (material_constant * filament_area) %}
#     SET_PRESSURE_ADVANCE ADVANCE={pressure_advance}

